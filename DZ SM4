#include <iostream>
#include <list>


using namespace std;



void g(list <double>& lst)
{
    list < double > ::const_iterator  p = lst.begin();
    double s(0);
    int n;
    while (p != lst.end())
    {
        s = s + *p;
        ++n;
        ++p;
    }
    if (n != 0) lst.push_back(s / n);
}


template <class T>
class Matrix
{
    T* data;
    unsigned int rows;
    unsigned int cols;

public:
    Matrix(unsigned int _rows, unsigned int _cols);
    ~Matrix();
    Matrix(const Matrix& m);
    Matrix& operator=(const Matrix& m);
    T determinant() const;
    friend istream& operator >> (istream& is, Matrix& m);
    friend ostream& operator << (ostream& os, const Matrix& m;
};
// 3 задание не успеваю сделать(((
